{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8ab3ebb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent,Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return 'Loading....';\n    }\n\n    return (<div className={styles.container} >\n        <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                <CardContent>\n                    <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp start ={0} end ={confirmed.value} duration={2.5} separator=\",\"/>\n                    </Typography>\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2'>Number of Active covid Cases</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                <CardContent>\n                    <Typography color='textSecondary' gutterBottom>RECOVERED</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp start ={0} end ={recovered.value} duration={2.5} separator=\",\"/>\n                    </Typography>\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2'>Number of recovered from covid</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                <CardContent>\n                    <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp start ={0} end ={deaths.value} duration={2.5} separator=\",\"/>\n                    </Typography>\n                    <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant='body2'>Number of Deaths by covid </Typography>\n                </CardContent>\n            </Grid>\n        </Grid>\n\n    </div>)\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try{\n        const {data : {confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\n        \n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch (error) {\n        return error;\n    }\n\n}\n\nexport const fetchDailyData = async () => {\n    try {\n      const { data } = await axios.get(`${url}/daily`);\n  \n      return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n      return error;\n    }\n  };\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries }} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n        return(error);\n    }\n\n}","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n\n            setDailyData(initialDailyData);\n        }\n\n        fetchMyAPI();\n    });\n    const  lineChart =(\n        dailyData.length  \n        ? (<Line \n        data={{\n            labels:dailyData.map(({date})=>date),\n            datasets: [{\n                data : dailyData.map(({confirmed})=>confirmed),\n                label:'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n            },{\n                data : dailyData.map(({deaths})=>deaths),\n                label:'Deaths',\n                borderColor: 'red',\n                backgroundColor : 'rgba(255,0,0,0.5)',\n                fill: true,\n            }],\n        }}\n        /> ): null\n    );\n\n    const barChart = (\n        confirmed\n        ?(\n            <Bar\n                data={{\n                    labels:['Infected','Recovered','Deaths'],\n                    datasets:[{\n                        label : 'People',\n                        backgroundColor : ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n                        data : [confirmed.value, recovered.value, deaths.value] ,\n                    }],\n                }}\n                options={{\n                    legend : {display: false},\n                    title: {display : true, text:`Current state in ${country}`},\n                }}\n            />\n        ): null\n    );\n\n    return (\n    <div className={styles.container}>\n        {country ? barChart:lineChart}\n    </div>)\n}\n\nexport default Chart;","import React, {useState,useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css'\n\nimport {fetchCountries} from '../../api';\n\nconst Countries = ({handleCountryChange}) => {\n    const [countries, setCountries] = useState([]);\n\n\n    useEffect(()=>{\n        const fetchAPI = async() =>{\n            setCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, []);\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"global\">Global</option>\n                {countries.map((country, i) => (\n        <option key ={i} value={country}>{country}</option> ))}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Countries;","import React from 'react';\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component{\n    state = {\n        data : {},\n        country: '',\n    }\n\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({data : fetchedData})\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({ data: fetchedData ,country: country})\n    }\n    \n    render(){\n        const {data, country} = this.state;\n\n        return (\n        <div className={styles.container}>\n            <img className ={styles.image} src={coronaImage} alt=\"COVID-19\"></img>\n               <Cards data={data}/>\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\n               <Chart data={data} country={country}/>\n        </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}